#TYPEDEF OfGeneric
package omni.api;
import java.util.Set;
import java.util.Collection;
public abstract interface OmniSet<E> extends OmniCollection<E>,Set<E>
{
  @Override
  default boolean addAll(Collection<? extends E> that){
    //TODO implement in lower classes and remove this
    return OmniCollection.super.addAll(that);
  }
  @Override
  default boolean containsAll(Collection<?> that){
    //TODO implement in lower classes and remove this
    return OmniCollection.super.containsAll(that);
  }
  @Override
  default boolean removeAll(Collection<?> that){
    //TODO implement in lower classes and remove this
    return OmniCollection.super.removeAll(that);
  }
  @Override
  default boolean retainAll(Collection<?> that){
    //TODO implement in lower classes and remove this
    return OmniCollection.super.retainAll(that);
  }
  
  #MACRO PrimitiveSubInterface<boolean,Boolean,Boolean>()
  #MACRO PrimitiveSubInterface<byte,Byte,Byte>()
  #MACRO PrimitiveSubInterface<char,Char,Character>()
  #MACRO PrimitiveSubInterface<short,Short,Short>()
  #MACRO PrimitiveSubInterface<int,Int,Integer>()
  #MACRO PrimitiveSubInterface<long,Long,Long>()
  #MACRO PrimitiveSubInterface<float,Float,Float>()
  #MACRO PrimitiveSubInterface<double,Double,Double>()
  //public abstract Object clone();
  public abstract interface DoubleOutput<E> extends OmniSet<E>,OmniCollection.DoubleOutput<E>{
  }
  public abstract interface FloatOutput<E> extends DoubleOutput<E>,OmniCollection.FloatOutput<E>{
  }
  public abstract interface LongOutput<E> extends FloatOutput<E>,OmniCollection.LongOutput<E>{
  }
  public abstract interface IntOutput<E> extends LongOutput<E>,OmniCollection.IntOutput<E>{
  }
  public abstract interface ShortOutput<E> extends IntOutput<E>,OmniCollection.ShortOutput<E>{
  }
  public abstract interface CharOutput<E> extends IntOutput<E>,OmniCollection.CharOutput<E>{
  }
  public abstract interface ByteOutput<E> extends ShortOutput<E>,OmniCollection.ByteOutput<E>{
  }
  public abstract interface BooleanInput<E> extends OmniSet<E>,OmniCollection.BooleanInput<E>{
  }
  public abstract interface ByteInput<E> extends BooleanInput<E>,OmniCollection.ByteInput<E>{
  }
  public abstract interface CharInput<E> extends BooleanInput<E>,OmniCollection.CharInput<E>{
  }
  public abstract interface ShortInput<E> extends ByteInput<E>,OmniCollection.ShortInput<E>{
  }
  public abstract interface IntInput<E> extends CharInput<E>,ShortInput<E>,OmniCollection.IntInput<E>{
  }
  public abstract interface LongInput<E> extends IntInput<E>,OmniCollection.LongInput<E>{
  }
  public abstract interface FloatInput<E> extends LongInput<E>,OmniCollection.FloatInput<E>{
  }
  
#MACRODEF PrimitiveSubInterface<ARRTYPE,CLASSPREFIX,BOXEDTYPE>()
  public abstract interface OfCLASSPREFIX extends OmniCollection<BOXEDTYPE>,OmniCollection.OfPrimitive<BOXEDTYPE>,OmniCollection.OfCLASSPREFIX,OmniSet<BOXEDTYPE>
#IFSWITCH ARRTYPE==boolean
,BooleanInput<BOXEDTYPE>,ByteOutput<BOXEDTYPE>,CharOutput<BOXEDTYPE>
#ELSEIFSWITCH ARRTYPE==double
,FloatInput<BOXEDTYPE>,DoubleOutput<BOXEDTYPE>
#ELSEIFNOTSWITCH ARRTYPE==Object
,CLASSPREFIXInput<BOXEDTYPE>,CLASSPREFIXOutput<BOXEDTYPE>
#ENDIF
  {}

#ENDDEF
  public abstract interface OfRef<E>extends OmniCollection<E>,OmniCollection.OfRef<E>,OmniSet<E>{}
}